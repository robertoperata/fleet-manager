replicaCount: 1
containerPort: 8080
containerPortName: http
image:
  repository: priz/fleet-manager
  pullPolicy: IfNotPresent
  tag: latest
  pullSecrets:
    - dockerhub-secret

imagePullSecrets: []

serviceAccount:
  create: false
  automount: true
  annotations: {}
  name: fleet-manager-sa

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
env:
  DATASOURCE_PASSWORD:
    valueFrom:
      secretKeyRef:
        key: FLEET_DATABASE_PASSWORD
        name: db-se
  SPRING_DATASOURCE_URL:
    value: jdbc:postgresql://$(POSTGRES_HOST):5432/$(FLEET_DATABASE_NAME)
  DATASOURCE_USERNAME:
    valueFrom:
      secretKeyRef:
        key: FEET_DATABASE_USER
        name: db-se

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /actuator/liveness
    port: http
readinessProbe:
  httpGet:
    path: /actuator/readiness
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
